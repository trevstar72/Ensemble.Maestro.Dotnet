namespace Ensemble.Maestro.Dotnet.Core.Agents;

/// <summary>
/// Result returned by agent execution
/// </summary>
public class AgentExecutionResult
{
    /// <summary>
    /// Whether the execution was successful
    /// </summary>
    public bool Success { get; set; }
    
    /// <summary>
    /// Output response from the agent
    /// </summary>
    public string OutputResponse { get; set; } = string.Empty;
    
    /// <summary>
    /// Error message if execution failed
    /// </summary>
    public string? ErrorMessage { get; set; }
    
    /// <summary>
    /// Quality score (0-100) of the output
    /// </summary>
    public int QualityScore { get; set; }
    
    /// <summary>
    /// Confidence score (0-100) in the result
    /// </summary>
    public int ConfidenceScore { get; set; }
    
    /// <summary>
    /// Number of input tokens used
    /// </summary>
    public int InputTokens { get; set; }
    
    /// <summary>
    /// Number of output tokens generated
    /// </summary>
    public int OutputTokens { get; set; }
    
    /// <summary>
    /// Total tokens used (input + output)
    /// </summary>
    public int TotalTokens => InputTokens + OutputTokens;
    
    /// <summary>
    /// Estimated cost of execution
    /// </summary>
    public decimal ExecutionCost { get; set; }
    
    /// <summary>
    /// Duration of execution in seconds
    /// </summary>
    public int DurationSeconds { get; set; }
    
    /// <summary>
    /// Generated artifacts (files, code, etc.)
    /// </summary>
    public List<AgentArtifact> Artifacts { get; set; } = new();
    
    /// <summary>
    /// Messages and conversation history with the LLM
    /// </summary>
    public List<AgentMessage> Messages { get; set; } = new();
    
    /// <summary>
    /// Additional metadata from execution
    /// </summary>
    public Dictionary<string, object> Metadata { get; set; } = new();
    
    /// <summary>
    /// Create a successful result
    /// </summary>
    public static AgentExecutionResult CreateSuccess(string output, int qualityScore = 85, int confidenceScore = 80)
    {
        return new AgentExecutionResult
        {
            Success = true,
            OutputResponse = output,
            QualityScore = qualityScore,
            ConfidenceScore = confidenceScore
        };
    }
    
    /// <summary>
    /// Create a failed result
    /// </summary>
    public static AgentExecutionResult Failure(string errorMessage)
    {
        return new AgentExecutionResult
        {
            Success = false,
            ErrorMessage = errorMessage,
            QualityScore = 0,
            ConfidenceScore = 0
        };
    }
}

/// <summary>
/// Artifact generated by an agent
/// </summary>
public class AgentArtifact
{
    public string Name { get; set; } = string.Empty;
    public string Type { get; set; } = string.Empty;
    public string Content { get; set; } = string.Empty;
    public string Path { get; set; } = string.Empty;
    public long Size { get; set; }
    public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
    public Dictionary<string, object> Metadata { get; set; } = new();
}

/// <summary>
/// Message in agent conversation
/// </summary>
public class AgentMessage
{
    public string Role { get; set; } = string.Empty; // system, user, assistant
    public string Content { get; set; } = string.Empty;
    public DateTime Timestamp { get; set; } = DateTime.UtcNow;
    public Dictionary<string, object> Metadata { get; set; } = new();
}